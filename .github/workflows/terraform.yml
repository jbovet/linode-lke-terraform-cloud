name: "Terraform Linode"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Validate:
    if: github.event_name == 'pull_request'
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📏 Terraform Format
        id: fmt
        run: terraform -chdir=terraform fmt -check

      - name: 👮 Run Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          quiet: true
          soft_fail: true
          framework: terraform
          output_format: json

  Terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🎬 Terraform Init
        id: init
        run: terraform -chdir=terraform init

      - name: 🏗️ Terraform Plan
        id: plan
        run: terraform -chdir=terraform plan -var "token=$LINODE_TOKEN" -no-color
        env:
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
        continue-on-error: true

      # - name: 🐾 Output Plan
      #   uses: actions/github-script@0.9.0
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      #   with:
      #     github-token: ${{ secrets.PAT_GITHUB_RW_REPOS }}
      #     script: |
      #       const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
      #       #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
      #       #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
      #       <details><summary>Show Plan</summary>
      #       \`\`\`${process.env.PLAN}\`\`\`
      #       </details>
      #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              
      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })

      # - name: ✅ Terraform Plan Status
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1

      - name: 🚀 Terraform Apply
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform -chdir=terraform apply -var "token=$LINODE_TOKEN" -auto-approve
        env:
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
          
